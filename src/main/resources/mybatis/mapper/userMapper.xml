<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.campusfavour.mapper.UserMapper">
    <sql id="fields">
        userId,
        userName,
        password,
        name,
        phone,
        stuNumber,
        createTime,
        taskCount,
        taskCountMonth,
        releaseCount,
        creditScore
    </sql>
    <sql id="registerUser">
        userName,
        password,
        name,
        phone,
        stuNumber,
        createTime
    </sql>

    <select id="selectUserList" resultType="Map">
        select
        <include refid="fields"></include>
        from user
    </select>

    <select id="getUserByParam" parameterType="Map" resultType="com.campusfavour.entity.User">
        select
        <include refid="fields" />
        from `user`
        <where>
            <if test="userId != null">
                AND userId = #{userId}
            </if>
            <if test="userName != null">
                AND userName = #{userName}
            </if>
            <if test="password != null">
                AND password = #{password}
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="phone != null">
                AND phone = #{phone}
            </if>
            <if test="stuNumber != null">
                AND stuNumber = #{stuNumber}
            </if>
            <if test="createTime != null">
                AND createTime = #{createTime}
            </if>
            <if test="taskCount != null">
                AND taskCount = #{taskCount}
            </if>
            <if test="taskCountMonth != null">
                AND taskCountMonth = #{taskCountMonth}
            </if>
            <if test="releaseCount != null">
                AND releaseCount = #{releaseCount}
            </if>
            <if test="creditScore != null">
                AND creditScore = #{creditScore}
            </if>
        </where>
    </select>

    <select id="selectTaskCountRanking" resultType="com.campusfavour.entity.User">
        select userName,taskCount
        from `user`
        order by  taskCount
        Desc
    </select>

    <select id="selectTaskCountMonthRanking" resultType="com.campusfavour.entity.User">
        select userName,taskCountMonth
        from `user`
        order by  taskCountMonth
        Desc
    </select>

    <update id="updateUserById" parameterType="Map">
        update `user`
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null and userName!=''">
                userName=#{userName},
            </if>
            <if test="password!=null and password!=''">
                password=#{password},
            </if>
            <if test="name!=null and name!=''">
                name=#{name},
            </if>
            <if test="phone!=null and phone!=''">
                phone=#{phone},
            </if>
            <if test="stuNumber!=null and stuNumber!=''">
                stuNumber=#{stuNumber},
            </if>
            <if test="taskCount!=null and taskCount!=''">
                taskCount=#{taskCount},
            </if>
            <if test="taskCountMonth!=null and taskCountMonth!=''">
                taskCountMonth=#{taskCountMonth},
            </if>
            <if test="releaseCount!=null and releaseCount!=''">
                releaseCount=#{releaseCount},
            </if>
            <if test="creditScore!=null and creditScore!=''">
                creditScore=#{creditScore},
            </if>
        </trim>
        WHERE userId=#{userId}
    </update>

    <update id="countMonthTask">
        update `user`
        set taskCountMonth = 0
    </update>

    <update id="creditScoreTask"  parameterType="Map">
        update user set creditScore = #{creditScore}
        where userId = #{userId}
    </update>

    <insert id="registerUser">
        insert into `user`(
        <include refid="registerUser"></include>
        )
        values (
        #{userName},
        #{password},
        #{name},
        #{phone},
        #{stuNumber},
        #{createTime}
        )
    </insert>

    <update id="monthNumAdd" parameterType="Map">
        update `user`
        set
        taskCountMonth = taskCountMonth+1
        where
        userId = #{userId}
    </update>

    <update id="totalNumAdd" parameterType="Map">
        update `user`
        set
        taskCount = taskCount+1
        where
        userId = #{userId}
    </update>
</mapper>
